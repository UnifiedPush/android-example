import java.util.regex.Matcher
import java.util.regex.Pattern

plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "org.unifiedpush.example"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 13
        versionName "1.2.4"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "version"
    productFlavors {
        mainFlavor {
            dimension "version"
        }

        fcm {
            dimension "version"
            versionNameSuffix "-fcm"
        }
    }

    sourceSets {
        fcm {
            manifest.srcFile "src/fcm/AndroidManifest.xml"
            java.srcDirs = ['src/main/java', 'src/fcm/java']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    ext.connector = 'com.github.UnifiedPush:android-connector:1.2.2'
    ext.embedded_distrib = 'com.github.UnifiedPush:android-embedded_fcm_distributor:1.1.2'

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'com.android.volley:volley:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //Flavors
    mainFlavorImplementation connector  //delToDevMain//
//toDevMain//    mainFlavorImplementation project(':connector')

    fcmImplementation connector
    fcmImplementation(embedded_distrib) {  //delToDevFcm//
        exclude group: 'com.google.firebase', module: 'firebase-core'  //delToDevFcm//
        exclude group: 'com.google.firebase', module: 'firebase-analytics'  //delToDevFcm//
        exclude group: 'com.google.firebase', module: 'firebase-measurement-connector'  //delToDevFcm//
    }  //delToDevFcm//
//toDevFcm//    fcmImplementation  project(':distributor')
}

def getCurrentFlavor() {
    Gradle gradle = getGradle()
    String  tskReqStr = gradle.getStartParameter().getTaskRequests().toString()
    String flavor

    Pattern pattern

    if( tskReqStr.contains( "assemble" ) )
        pattern = Pattern.compile("assemble(\\w+)")
    else
        pattern = Pattern.compile("generate(\\w+)")

    Matcher matcher = pattern.matcher( tskReqStr )

    if( matcher.find() ) {
        flavor = matcher.group(1).toLowerCase()
    }
    else
    {
        println "NO MATCH FOUND"
        return ""
    }

    pattern = Pattern.compile("^fcm.*");
    matcher = pattern.matcher(flavor);

    if( matcher.matches() ) {
        return "fcm"
    } else {
        return "main"
    }
}

println("Flavor: ${getCurrentFlavor()}")
if ( getCurrentFlavor() == "fcm" ){
    apply plugin: 'com.google.gms.google-services'
}
